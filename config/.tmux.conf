# Binding to ^A
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Mouse options
set -g mouse on

set -g default-terminal "screen-256color"

set -g status-style "fg=white bg=white bright"
set -g status-right '#[fg=white] %Y-%m-%d %H:%M'
set -g status-right-length 80
set -g history-limit 5000

set-window-option -g window-status-current-style "bg=red dim"
set -g status-left "#[fg=green]#H"


# Linux copy-paste
# C-c: save into system clipboard (+). With preselection.
# bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
# bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# Another linux copy paste.
#
# Source: https://medium.freecodecamp.org/tmux-in-practice-integration-with-system-clipboard-bcd72c62ff7b
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
# Source: https://unix.stackexchange.com/questions/348913/copy-selection-to-a-clipboard-in-tmux
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -se c -i"

# Mac copy paste
#setw -g mode-keys vi
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

source "/usr/share/powerline/bindings/tmux/powerline.conf"

set -g default-command "/usr/bin/zsh"
